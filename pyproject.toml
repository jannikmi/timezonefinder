[tool.poetry]
name = "timezonefinder"
version = "6.5.0"
description = "python package for finding the timezone of any point on earth (coordinates) offline"
authors = ["jannikmi <github@michelfe.it>"]
license = "MIT"
readme = "README.rst"
repository = "https://github.com/jannikmi/timezonefinder"
homepage = "https://timezonefinder.michelfe.it/gui"
documentation = "https://timezonefinder.readthedocs.io/en/latest/"
keywords = ["timezone", "coordinates", "latitude", "longitude", "location", "offline", "polygon"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Localization",
]
include = [
    "timezonefinder/*.bin",
    "timezonefinder/*.json",
    "timezonefinder/py.typed",
    "timezonefinder/inside_poly_extension/*",
    #    "build.py", # Note: auto included
]
#exclude = ["my_package/excluded.py"]

[tool.poetry.scripts]
timezonefinder = "timezonefinder.command_line:main"

[tool.poetry.dependencies]
python = ">=3.8,<4"
# https://numpy.org/neps/nep-0029-deprecation_policy.html
numpy = [
    { version = ">=1.21,<2", python = "<3.9" },
    { version = ">=1.23,<2", python = ">=3.9" }
]
h3 = ">=3.7.6,<4" # python3.11 support
cffi = ">=1.15.1,<2"
# build dependencies. workaround to always have these installed
setuptools = ">=65.5"

# optional dependencies (extras)
numba = [
    { version = ">=0.56,<1", python = "<3.12", optional = true },
    { version = ">=0.59,<1", python = ">=3.12", optional = true }
]
pytz = { version = ">=2022.7.1", optional = true }

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
Sphinx = "^5"
sphinx-rtd-theme = "^1"

[tool.poetry.group.dev.dependencies]
tox = "*"
pytest = "*"
pre-commit = "*"
mypy = "*"
rstcheck = "*"
isort = "*"
ruff = "^0.3.2"

[tool.poetry.extras]
numba = ["numba"]
pytz = ["pytz"]

[build-system]
requires = ["poetry-core>=1.0.0", "cffi", "setuptools"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.build]
script = "build.py"
generate-setup-file = false


[tool.ruff]
target-version = "py38"
src = ["timezonefinder", "tests", "build.py"]

[tool.ruff.lint.isort]
known-local-folder = ["timezonefinder"]


[tool.tox]
legacy_tox_ini = """
    [tox]
    isolated_build = true
    envlist =
        docs,py{38,39,310,311,312}{,-numba,-pytz}

    [gh-actions]
    python =
        3.8: py38{,-numba,-pytz}
        3.9: py39{,-numba,-pytz}
        3.10: py310{,-numba,-pytz}
        3.11: py311{,-numba,-pytz}
        3.12: py312{,-numba,-pytz}


    [testenv:docs]
    description = build documentation
    basepython = python3.12
    allowlist_externals = poetry,sphinx-build
    commands =
      poetry install -v --with docs
      sphinx-build -d "{envtmpdir}{/}doctree" docs "{toxworkdir}{/}docs_out" --color -b html
      python -c 'print(r"documentation available under file://{toxworkdir}{/}docs_out{/}index.html")'

    [testenv]
    allowlist_externals = poetry
    commands =
        !numba: poetry install -v
        numba:  poetry install -v --extras numba
        pytz:  poetry install -v --extras pytz
        poetry run pytest {posargs}
"""
